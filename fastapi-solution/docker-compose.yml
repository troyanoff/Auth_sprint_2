version: '3'
services:

  postgres_movies:
    image: postgres:16
    container_name: postgres_movies
    restart: always
    volumes:
      - postgres_movies_value:/var/lib/postgresql/data/
      - ./postgres_to_es/movies_database.sql:/docker-entrypoint-initdb.d/movies_database.sql
    env_file:
      - ./.env
    ports:
      - 5432:5432

  elasticsearch:
    image: elasticsearch:8.6.2
    deploy:
      resources:
        limits:
          memory: 4GB
    restart: always
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"

  etl:
    build: ./postgres_to_es
    depends_on:
      - postgres_movies
      - elasticsearch
    env_file:
      - .env

  redis_movies:
    image: redis:latest
    container_name: redis_movies
    restart: always
    volumes:
      - redis_movies_value:/root/redis
    ports:
      - 7000

  movies_service:
    build: .
    container_name: movies_service
    depends_on:
      - redis_movies
      - etl
    env_file:
      - .env

  nginx:
    image: nginx:1.25.3
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
    depends_on:
      - postgres_movies
      - elasticsearch
      - redis_movies
      - movies_service
    ports:
      - "80:80"

volumes:
  postgres_movies_value:
  redis_movies_value:
